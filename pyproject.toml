[tool.poetry]
name = "boxmot"
version = "12.0.1"
description = "BoxMOT: pluggable SOTA tracking modules for segmentation, object detection and pose estimation models"
authors = ["Mikel BrostrÃ¶m"]
license = "AGPL-3.0"
readme = "README.md"
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'Intended Audience :: Education',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Software Development',
    'Topic :: Scientific/Engineering',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'Topic :: Scientific/Engineering :: Image Recognition',
    'Topic :: Scientific/Engineering :: Image Processing',
]
keywords = ["tracking", "tracking-by-detection", "machine-learning", "deep-learning", "vision", "ML", "DL", "AI", "YOLO"]


[tool.poetry.dependencies]
python = "^3.9"
filterpy = "^1.4.5"
gdown = "^5.1.0"
lapx = "^0.5.5"
loguru = "^0.7.2"
numpy = "1.26.4"
pyyaml = "^6.0.1"
regex = "^2024.0.0"
yacs = "^0.1.8"
scikit-learn = "^1.3.0"
pandas = "^2.0.0"
opencv-python = "^4.7.0"
ftfy = "^6.1.3"
gitpython = "^3.1.42"
# Using existing packages from conda environment installed via pip
# pip install torch==2.2.1 torchvision==0.17.1 torchaudio==2.2.1
torch = {version = "2.2.1", optional = true}
torchvision = {version = "0.17.1", optional = true}
torchaudio = {version = "2.2.1", optional = true}


[tool.poetry.group.test.dependencies]
pytest = "^8.0.2"
isort = "^5.13.2"
pytest-cov = "^6.0.0"


[tool.poetry.group.yolo.dependencies]
# Using existing package from conda environment installed via pip
# pip install -i https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple ultralytics==8.3.74
ultralytics = {version = "8.3.74", optional = true}


[tool.poetry.group.export.dependencies]
onnx = "^1.15.0"
onnxsim = "^0.4.36"
openvino-dev = ">=2023.3,<2025.0"


[tool.poetry.group.evolve.dependencies]
ray = "^2.35.0"
plotly = "^5.19.0"
joblib = "^1.3.2"


[[tool.poetry.source]]
name = "torchcpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"


[[tool.poetry.source]]
name = "torch_cuda118"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"


[[tool.poetry.source]]
name = "tuna"
url = "https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple"
priority = "primary"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.flake8]
max-line-length = 120
exclude = [".tox", "*.egg", "build", "temp"]
select = ["E", "W", "F"]
doctests = true
verbose = 2
format = "pylint"
ignore = ["E731", "F405", "E402", "W504", "W605", "E741"]
